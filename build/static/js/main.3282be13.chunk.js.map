{"version":3,"sources":["components/Header.js","contexts/StyleContext.js","components/Sidebar.js","components/Burger.js","components/Topbar.js","components/Preloader.js","pages/404.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","type","header","className","main","sub","bg","StyleContext","React","createContext","StyleProvider","Provider","Consumer","withRouter","location","isDark","useContext","useState","isChecked","setChecked","styleContext","nav","name","url","icon","checked","class","onChange","changeTheme","map","item","key","to","pathname","Burger","isClick","setClick","onClick","style","visibility","top","renderHeader","Preloader","NotFound","height","display","justifyContent","alignItems","fontWeight","color","borderRight","margin","padding","fontSize","Home","lazy","a","Promise","resolve","setTimeout","About","Portfolio","Contact","Blog","App","setState","state","localStorage","setItem","getItem","darkPref","window","matchMedia","matches","this","JSON","parse","value","fallback","exact","path","component","Topbar","Sidebar","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3282be13.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../css/Header.css';\n\nconst Header = (props) => {\n  const { type, header } = props;\n\n  return(\n    <div className={type === 'topmenu' ? \"Header header-mobile\" : \"Header d-none d-sm-block\" }>\n      <h1>\n        {header.main}\n        <span> {header.sub}</span>\n      </h1>\n      {\n        type !== 'topmenu' && <span className=\"header-bg\">{header.bg}</span>\n      }\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  type: PropTypes.string,\n  header: PropTypes.shape({\n    main: PropTypes.string,\n    sub: PropTypes.string,\n    bg: PropTypes.string\n  })\n};\n\nexport default Header;","import React from \"react\";\r\n\r\nconst StyleContext = React.createContext();\r\n\r\nexport const StyleProvider = StyleContext.Provider;\r\nexport const StyleConsumer = StyleContext.Consumer;\r\n\r\nexport default StyleContext;\r\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Link,\n  withRouter\n} from 'react-router-dom';\nimport {\n  FaHome,\n  FaUserAlt,\n  FaBriefcase,\n  FaEnvelopeOpen,\n  FaComments\n} from 'react-icons/fa';\n\nimport StyleContext from \"../contexts/StyleContext\";\nimport '../css/Sidebar.css';\n\nconst Sidebar = (props) => {\n  const { location } = props;\n  const { isDark } = useContext(StyleContext);\n  const [isChecked, setChecked] = useState(isDark);\n  const styleContext = useContext(StyleContext);\n\n  const nav = [\n    { name: 'HOME', url: '/', icon: <FaHome /> },\n    { name: 'ABOUT', url: '/about', icon: <FaUserAlt /> },\n    { name: 'PORTFOLIO', url: '/portfolio', icon: <FaBriefcase /> },\n    { name: 'CONTACT', url: '/contact', icon: <FaEnvelopeOpen /> },\n    { name: 'BLOG', url: '/blog', icon: <FaComments /> }\n  ]\n  return (\n    <div className=\"Sidebar d-none d-sm-flex\">\n      <ul className=\"nav\">\n        <li className=\"nav-item\">\n          <div className=\"switch-container\">\n            <input\n              checked={!isDark}\n              class=\"Switch\"\n              type=\"checkbox\"\n              onChange={() => {\n                styleContext.changeTheme();\n                setChecked(!isChecked);\n              }}\n            />\n          </div>\n        </li>\n        {\n          nav.map(item =>\n            <li key={item.name} className=\"nav-item\">\n              <Link\n                to={item.url}\n                className={location.pathname === item.url ? \"nav-active\" : null}\n              >\n                {item.icon}\n                <p className=\"nav-name\">{item.name}</p>\n              </Link>\n            </li>\n          )\n        }\n      </ul>\n    </div>\n  )\n}\n\nSidebar.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  })\n};\n\nexport default withRouter(Sidebar);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../css/Burger.css';\n\nconst Burger = (props) => {\n  const { isClick, setClick, pathname } = props;\n\n  return(\n    <div \n      className={isClick ? \"Burger toggle\" : \"Burger\"} \n      onClick={() => setClick(!isClick)}\n      style={\n        pathname === '/' ? {\n          visibility: \"visible\",\n          top: \"100%\"          \n        } : null\n      }\n    >\n      <div className=\"line\"></div>\n      <div className=\"line\"></div>\n      <div className=\"line\"></div>\n    </div>\n  );\n}\n\nBurger.propTypes = {\n  isClick: PropTypes.bool,\n  setClick: PropTypes.func,\n  pathname: PropTypes.string\n};\n\nexport default Burger;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n  Link,\n  withRouter \n} from 'react-router-dom';\nimport { \n  FaHome,\n  FaUserAlt,\n  FaBriefcase,\n  FaEnvelopeOpen,\n  FaComments\n } from 'react-icons/fa';\n\nimport '../css/Topbar.css';\nimport Burger from './Burger';\nimport Header from './Header';\n\nconst Topbar = (props) => {\n  const { location } = props;\n  const [ isClick, setClick ] = useState(false);\n\n  const nav = [\n    { name: 'HOME', url: '/', icon: <FaHome />},\n    { name: 'ABOUT', url: '/about', icon: <FaUserAlt />},\n    { name: 'PORTFOLIO', url: '/portfolio', icon: <FaBriefcase />},\n    { name: 'CONTACT', url: '/contact', icon: <FaEnvelopeOpen />},\n    { name: 'BLOG', url: '/blog', icon: <FaComments />}\n  ];\n\n  const renderHeader = () => {\n    switch(location.pathname) {\n      case '/about': \n        return { bg: 'resume', main: 'about', sub: 'me' };\n      case '/portfolio':\n        return { bg: 'works', main: 'my', sub: 'portfolio' };\n      case '/contact':\n        return { bg: 'contact', main: 'get in', sub: 'touch' };\n      case '/blog':\n        return { bg: 'posts', main: 'my', sub: 'blogs'};\n      default:\n        return { bg: '', main: '', sub: '' };\n    }\n  }\n\n  const header = renderHeader();\n\n  return(\n    <div \n      className=\"Topbar d-block d-sm-none\"\n      style={\n        location.pathname === '/' ? {\n          visibility: \"hidden\"\n        } : null\n      }\n    >\n      <Header type=\"topmenu\" header={header} />\n      <Burger isClick={isClick} setClick={setClick} pathname={location.pathname} />\n      <ul \n        className={isClick ? \"nav nav-active\" : \"nav\"}\n        style={\n          location.pathname === '/' ? {\n            visibility: \"visible\"\n          } : null\n        }\n      >\n        {\n          nav.map(item => \n            <li className=\"nav-item\" key={item.name}>\n              <Link \n                to={item.url}\n                onClick={() => setClick(!isClick)}\n                className={ location.pathname === item.url ? \"nav-item-active\" : null}\n              >\n                {item.icon}\n                <p>{item.name}</p>\n              </Link>\n            </li>\n          )\n        }\n      </ul>\n    </div>\n  );\n}\n\nTopbar.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  })\n};\n\nexport default withRouter(Topbar);","import React from 'react';\n\nimport '../css/Preloader.css';\n\nconst Preloader = () => {\n  return(\n    <div className='Preloader'>\n      <div className=\"black-wall\"></div>\n      <div className=\"loader\"></div>\n    </div>\n  );\n}\n\nexport default Preloader;","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div\n      className=\"404NotFound\"\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontWeight: \"600\",\n        color: \"var(--main-color)\"\n      }}\n    >\n      <h1\n        style={{\n          borderRight: \"1px solid var(--main-color)\",\n          margin: \"0px 20px 0px 0px\",\n          padding: \"10px 23px 10px 0px\",\n          fontSize: \"30px\",\n          fontWeight: \"600\"\n        }}\n      >\n        404\n      </h1>\n      This page could not be found.\n    </div>\n  );\n}\n\nexport default NotFound;","import React, { Suspense, Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport { StyleProvider } from \"./contexts/StyleContext\";\n\nimport Sidebar from './components/Sidebar';\nimport Topbar from './components/Topbar';\nimport Preloader from './components/Preloader';\nimport NotFound from './pages/404';\n\nconst Home = React.lazy(async () => {\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return import('./pages/Home');\n});\n\nconst About = React.lazy(async () => {\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return import('./pages/About');\n});\n\nconst Portfolio = React.lazy(async () => {\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return import('./pages/Portfolio');\n});\n\nconst Contact = React.lazy(async () => {\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return import('./pages/Contact');\n});\n\nconst Blog = React.lazy(async () => {\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  return import('./pages/Blog');\n});\n\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDark: false\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"isDark\") === null) {\n      const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n      localStorage.setItem(\"isDark\", darkPref.matches);\n    }\n    this.setState({ isDark: JSON.parse(localStorage.getItem(\"isDark\")) });\n  }\n\n  changeTheme = () => {\n    this.setState({ isDark: !this.state.isDark }, () => {\n      localStorage.setItem(\"isDark\", this.state.isDark);\n    });\n  };\n\n  render() {\n    return (\n      <div className={this.state.isDark ? \"dark-mode\" : \"light-mode\"}>\n        <StyleProvider value={{\n          isDark: this.state.isDark,\n          changeTheme: this.changeTheme\n        }}>\n          <Suspense fallback={<Preloader />}>\n            <Router>\n              <Route exact path={[\"/\", \"/about\", \"/portfolio\", \"/contact\", \"/blog\"]} component={Topbar} />\n              <Route exact path={[\"/\", \"/about\", \"/portfolio\", \"/contact\", \"/blog\"]} component={Sidebar} />\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/portfolio\" component={Portfolio} />\n                <Route path=\"/contact\" component={Contact} />\n                <Route path=\"/blog\" component={Blog} />\n                <Route component={NotFound} />\n              </Switch>\n            </Router>\n          </Suspense>\n        </StyleProvider>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}